/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ERC1155TokenReceiverInterface extends ethers.utils.Interface {
  functions: {
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;

  events: {};
}

export class ERC1155TokenReceiver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ERC1155TokenReceiverInterface;

  functions: {
    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  /**
   * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
   * Handle the receipt of a single ERC1155 token type.
   * @param _data Additional data with no specified format
   * @param _from The address which previously owned the token
   * @param _id The ID of the token being transferred
   * @param _operator The address which initiated the transfer (i.e. msg.sender)
   * @param _value The amount of tokens being transferred
   * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
   */
  onERC1155Received(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  /**
   * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
   * Handle the receipt of a single ERC1155 token type.
   * @param _data Additional data with no specified format
   * @param _from The address which previously owned the token
   * @param _id The ID of the token being transferred
   * @param _operator The address which initiated the transfer (i.e. msg.sender)
   * @param _value The amount of tokens being transferred
   * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
   */
  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  /**
   * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
   * Handle the receipt of multiple ERC1155 token types.
   * @param _data Additional data with no specified format
   * @param _from The address which previously owned the token
   * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
   * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
   * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
   * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
   */
  onERC1155BatchReceived(
    _operator: string,
    _from: string,
    _ids: BigNumberish[],
    _values: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  /**
   * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
   * Handle the receipt of multiple ERC1155 token types.
   * @param _data Additional data with no specified format
   * @param _from The address which previously owned the token
   * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
   * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
   * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
   * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
   */
  "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
    _operator: string,
    _from: string,
    _ids: BigNumberish[],
    _values: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.         This function MUST return `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of a single ERC1155 token type.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _id The ID of the token being transferred
     * @param _operator The address which initiated the transfer (i.e. msg.sender)
     * @param _value The amount of tokens being transferred
     * @returns `bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"))`
     */
    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    /**
     * An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.         This function MUST return `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.
     * Handle the receipt of multiple ERC1155 token types.
     * @param _data Additional data with no specified format
     * @param _from The address which previously owned the token
     * @param _ids An array containing ids of each token being transferred (order and length must match _values array)
     * @param _operator The address which initiated the batch transfer (i.e. msg.sender)
     * @param _values An array containing amounts of each token being transferred (order and length must match _ids array)
     * @returns `bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"))`
     */
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
